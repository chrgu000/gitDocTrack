方式一：客户端 建立短连接 轮询服务端要关注的数据。
   接口：返回码 i_func(long timestamp,string table_name);
   缺点：1.关注的数据较多时，一次总轮询需要太多轮询，实时性不好(即使多线程优化)。
	 2.客户端可能会执行很多无用的轮询操作(服务端没有数据更新的时候)。
   优点：双方不用维护socket长连接(心跳包等)。

方式二：客户端 建立长连接 接收服务端推送的更新数据。
   接口：返回码 i_func(string table_name,List<T> add_datas);
   缺点：需要双方维护socket长连接(心跳包等)。
   优点：1.由数据更新方 主动 推送更新的数据。
	 2.客户端不用执行无用的轮询监听操作。

方式三：客户端 建立长连接 接收服务端推送的更新通知，然后由客户端主动的获取想要更新的数据(接口或网络)。
   缺点：需要双方维护socket长连接(心跳包等)。
   优点：1.由数据更新方 主动 推送更新的数据。
 	 2.客户端不用执行无用的轮询监听操作。
	 3.由客户端 主动 获取需要更新的数据，减少不必要的更新操作。
	 4.让网络通知和网络数据更新 分离，降低耦合。